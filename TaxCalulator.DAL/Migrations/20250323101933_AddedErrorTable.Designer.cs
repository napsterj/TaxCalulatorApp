// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalulator.DAL;

#nullable disable

namespace TaxCalulator.DAL.Migrations
{
    [DbContext(typeof(CalculatorDbContext))]
    [Migration("20250323101933_AddedErrorTable")]
    partial class AddedErrorTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxCalulator.Entities.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 2,
                            Name = "UK"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("TaxCalulator.Entities.Entities.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("TaxCalulator.Entities.Entities.TaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("TaxRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Rate = 10m
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Rate = 13m
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Rate = 20m
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Rate = 5m
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Rate = 20m
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 3,
                            Rate = 6m
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 3,
                            Rate = 13m
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            Rate = 23m
                        });
                });

            modelBuilder.Entity("TaxCalulator.Entities.Entities.TaxRate", b =>
                {
                    b.HasOne("TaxCalulator.Entities.Entities.Country", "Country")
                        .WithMany("TaxRates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TaxCalulator.Entities.Entities.Country", b =>
                {
                    b.Navigation("TaxRates");
                });
#pragma warning restore 612, 618
        }
    }
}
